---
- name: Install Rust Nightly
  ansible.builtin.import_tasks: tasks/install_rust.yml
  vars:
    rustup_toolchain: "nightly"
    rustup_flags: "--component rust-src"

- name: Install bpftool
  ansible.builtin.import_tasks: tasks/install_bpftool.yml

- name: Install bpf-linker
  ansible.builtin.command:
    cmd: cargo install bpf-linker
  register: bpf_linker
  changed_when: "'already installed' not in bpf_linker.stdout"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.cargo/bin"

- name: Install bindgen-cli
  ansible.builtin.command:
    cmd: cargo install bindgen-cli
  register: bindgen_cli
  changed_when: "'already installed' not in bindgen_cli.stdout"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.cargo/bin"

- name: Install aya-tool
  ansible.builtin.command:
    cmd: cargo install --git https://github.com/aya-rs/aya -- aya-tool
  register: aya_tool
  changed_when: "'already installed' not in aya_tool.stdout"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.cargo/bin"

- name: Install strace
  ansible.builtin.package:
    name: strace
    state: present
  become: true

- name: Install RootAsRole
  ansible.builtin.command:
    cmd: command -v capable
  register: capable
  failed_when: false
  changed_when: false

- name: Clone Capable repository
  when: capable.rc != 0
  ansible.builtin.git:
    repo: 'https://github.com/LeChatP/RootAsRole-capable.git'
    dest: '/tmp/RootAsRole-capable'
    clone: true
    update: true
    force: true
    version: "{{ rootasrole_branch }}"
  become: false
  register: git

- name: Performing install
  when: sr.rc != 0
  ansible.builtin.command:
    cmd: 'cargo build --release'
    chdir: '/tmp/RootAsRole-capable'
  become: false
  timeout: 600
  args:
    creates:
      - '/tmp/RootAsRole-capable/target/release/capable'
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.cargo/bin"

- name: Copy capable to /usr/bin
  when: capable.rc != 0
  ansible.builtin.command:
    cmd: cp /tmp/RootAsRole-capable/target/release/capable /usr/bin/capable
  become: true
  args:
    creates:
      - '/usr/bin/capable'
