---
- name: Create ssh key
  import_playbook: playbooks/create-sshkey.yml

- name: Start docker
  import_playbook: playbooks/start-docker.yml

- name: Install RootAsRole
  hosts: docker
  connection: ssh
  become: false
  roles:
    - rootasrole
  vars:
    rootasrole_command: "install"
    rootasrole_branch: "main"
    rootasrole_sr_password: "no"
- name: Install Capable
  hosts: docker
  connection: ssh
  become: false
  roles:
    - rootasrole
  vars:
    rootasrole_command: "install capable"
    rootasrole_branch: "main"

- name: Install gensr
  hosts: docker
  connection: ssh
  become: false
  roles:
    - rootasrole
  vars:
    rootasrole_command: "install gensr"
    rootasrole_branch: "main"

- name: Deploy RootAsRole roles for Ansible
  hosts: docker
  gather_facts: false
  tasks:
    - name: Deploy RootAsRole roles for Ansible
      ansible.builtin.import_tasks: tasks/deploy_sr_roles.yml

- name: Install Apache2
  become_method: ansible.legacy.capable
  ansible.builtin.import_playbook: scenario_paper_esorics.yml

- name: Test Apache2
  connection: local
  hosts: localhost
  become: false
  tasks:
    - name: Test Apache2
      ansible.builtin.uri:
        url: "http://{{ ansible_host }}/index.html"
        status_code: 200
  ignore_errors: true

- name: Read RootAsRole generated policy
  hosts: docker
  gather_facts: false
  become: true
  tasks:
    - name: Get RootAsRole policy contents
      ansible.builtin.command: cat /tmp/capable_output.json
      register: rar_policy
      become: true
      changed_when: false
    - name: Viewing RootAsRole policy
      ansible.builtin.debug:
        msg: "{{ rar_policy.stdout }}"
      changed_when: false
