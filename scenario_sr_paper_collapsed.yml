---
- name: Ansible Playbook to Install and Setup Apache on Ubuntu
  hosts: webserver
  become: true
  become_method: ansible.legacy.sr
  gather_facts: false
  tasks:
    - name: Install latest version of Apache
      tags: skip_ansible_lint
      become_flags: "-r deploy_apache -t install_apache2"
      ansible.builtin.apt: name=apache2 update_cache=true state=fixed force=true

    - name: Create document root for domain configured in host variable
      tags: skip_ansible_lint
      become_flags: "-r deploy_apache -t create_document_root"
      ansible.builtin.file: path="/var/www/{{ http_host }}" state=directory owner=www-data group=www-data mode='0775'

    - name: Deploy website source code
      become_flags: "-r deploy_apache -t deploy_website"
      ansible.builtin.import_tasks: tasks/deploy-website.yml

    - name: Set up virtualHost
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/apache-template.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Enable site
      become_flags: "-r deploy_apache -t enable_site"
      ansible.builtin.command: a2ensite {{ http_conf }}
      args:
        creates: "/etc/apache2/sites-enabled/{{ http_conf }}"
      notify: restart-apache

    - name: Open port 80
      tags: skip_ansible_lint
      become_flags: "-r deploy_apache -t 'open port 80'"
      ansible.builtin.import_role: name=mallory_net_input
      vars:
        mallory_net_input_protocol: tcp
        mallory_net_input_port: 80
        mallory_net_input_state: accepting

  handlers:
    - name: Restart-apache
      tags: skip_ansible_lint
      become_flags: "-r deploy_apache -t restart_apache"
      ansible.builtin.service: name=apache2 state=restarted
